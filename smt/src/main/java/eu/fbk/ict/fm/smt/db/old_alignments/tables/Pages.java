/**
 * This class is generated by jOOQ
 */
package eu.fbk.ict.fm.smt.db.old_alignments.tables;


import eu.fbk.ict.fm.smt.db.old_alignments.Keys;
import eu.fbk.ict.fm.smt.db.old_alignments.TwitterDataset;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.records.PagesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pages extends TableImpl<PagesRecord> {

    private static final long serialVersionUID = 1313547530;

    /**
     * The reference instance of <code>twitter_dataset.pages</code>
     */
    public static final Pages PAGES = new Pages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PagesRecord> getRecordType() {
        return PagesRecord.class;
    }

    /**
     * The column <code>twitter_dataset.pages.resource_id</code>.
     */
    public final TableField<PagesRecord, String> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.VARCHAR.length(190).nullable(false), this, "");

    /**
     * The column <code>twitter_dataset.pages.object</code>.
     */
    public final TableField<PagesRecord, String> OBJECT = createField("object", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>twitter_dataset.pages</code> table reference
     */
    public Pages() {
        this("pages", null);
    }

    /**
     * Create an aliased <code>twitter_dataset.pages</code> table reference
     */
    public Pages(String alias) {
        this(alias, PAGES);
    }

    private Pages(String alias, Table<PagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pages(String alias, Table<PagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return TwitterDataset.TWITTER_DATASET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PagesRecord> getPrimaryKey() {
        return Keys.KEY_PAGES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PagesRecord>> getKeys() {
        return Arrays.<UniqueKey<PagesRecord>>asList(Keys.KEY_PAGES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pages as(String alias) {
        return new Pages(alias, this);
    }

    /**
     * Rename this table
     */
    public Pages rename(String name) {
        return new Pages(name, null);
    }
}
