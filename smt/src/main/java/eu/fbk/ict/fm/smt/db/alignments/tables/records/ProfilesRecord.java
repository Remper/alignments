/**
 * This class is generated by jOOQ
 */
package eu.fbk.ict.fm.smt.db.alignments.tables.records;


import eu.fbk.ict.fm.smt.db.alignments.tables.Profiles;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProfilesRecord extends UpdatableRecordImpl<ProfilesRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 665716825;

    /**
     * Setter for <code>alignments.profiles.twitter_id</code>.
     */
    public void setTwitterId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>alignments.profiles.twitter_id</code>.
     */
    public Long getTwitterId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>alignments.profiles.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>alignments.profiles.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Profiles.PROFILES.TWITTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Profiles.PROFILES.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getTwitterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfilesRecord value1(Long value) {
        setTwitterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfilesRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProfilesRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProfilesRecord
     */
    public ProfilesRecord() {
        super(Profiles.PROFILES);
    }

    /**
     * Create a detached, initialised ProfilesRecord
     */
    public ProfilesRecord(Long twitterId, String username) {
        super(Profiles.PROFILES);

        set(0, twitterId);
        set(1, username);
    }
}
