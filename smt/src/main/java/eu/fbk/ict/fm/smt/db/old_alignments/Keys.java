/**
 * This class is generated by jOOQ
 */
package eu.fbk.ict.fm.smt.db.old_alignments;


import eu.fbk.ict.fm.smt.db.old_alignments.tables.Alignments;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Pages;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Tweets;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Users;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.records.AlignmentsRecord;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.records.PagesRecord;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.records.TweetsRecord;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>twitter_dataset</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AlignmentsRecord> KEY_ALIGNMENTS_PRIMARY = UniqueKeys0.KEY_ALIGNMENTS_PRIMARY;
    public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = UniqueKeys0.KEY_PAGES_PRIMARY;
    public static final UniqueKey<TweetsRecord> KEY_TWEETS_PRIMARY = UniqueKeys0.KEY_TWEETS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AlignmentsRecord> KEY_ALIGNMENTS_PRIMARY = createUniqueKey(Alignments.ALIGNMENTS, "KEY_alignments_PRIMARY", Alignments.ALIGNMENTS.RESOURCE_ID);
        public static final UniqueKey<PagesRecord> KEY_PAGES_PRIMARY = createUniqueKey(Pages.PAGES, "KEY_pages_PRIMARY", Pages.PAGES.RESOURCE_ID);
        public static final UniqueKey<TweetsRecord> KEY_TWEETS_PRIMARY = createUniqueKey(Tweets.TWEETS, "KEY_tweets_PRIMARY", Tweets.TWEETS.TWITTER_ID, Tweets.TWEETS.TWEET_ID, Tweets.TWEETS.TIMESTAMP);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.TWITTER_ID, Users.USERS.TIMESTAMP);
    }
}
