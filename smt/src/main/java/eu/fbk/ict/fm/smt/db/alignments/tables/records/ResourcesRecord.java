/**
 * This class is generated by jOOQ
 */
package eu.fbk.ict.fm.smt.db.alignments.tables.records;


import eu.fbk.ict.fm.smt.db.alignments.tables.Resources;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourcesRecord extends UpdatableRecordImpl<ResourcesRecord> implements Record3<String, Byte, String> {

    private static final long serialVersionUID = 1225395890;

    /**
     * Setter for <code>alignments.resources.resource_id</code>.
     */
    public void setResourceId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>alignments.resources.resource_id</code>.
     */
    public String getResourceId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>alignments.resources.is_dead</code>.
     */
    public void setIsDead(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>alignments.resources.is_dead</code>.
     */
    public Byte getIsDead() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>alignments.resources.dataset</code>.
     */
    public void setDataset(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>alignments.resources.dataset</code>.
     */
    public String getDataset() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Byte, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Byte, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Resources.RESOURCES.RESOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return Resources.RESOURCES.IS_DEAD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Resources.RESOURCES.DATASET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getIsDead();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDataset();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value1(String value) {
        setResourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value2(Byte value) {
        setIsDead(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord value3(String value) {
        setDataset(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcesRecord values(String value1, Byte value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ResourcesRecord
     */
    public ResourcesRecord() {
        super(Resources.RESOURCES);
    }

    /**
     * Create a detached, initialised ResourcesRecord
     */
    public ResourcesRecord(String resourceId, Byte isDead, String dataset) {
        super(Resources.RESOURCES);

        set(0, resourceId);
        set(1, isDead);
        set(2, dataset);
    }
}
