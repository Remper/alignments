/**
 * This class is generated by jOOQ
 */
package eu.fbk.ict.fm.smt.db.old_alignments;


import eu.fbk.ict.fm.smt.db.old_alignments.tables.Alignments;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Pages;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Tweets;
import eu.fbk.ict.fm.smt.db.old_alignments.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TwitterDataset extends SchemaImpl {

    private static final long serialVersionUID = -241929370;

    /**
     * The reference instance of <code>twitter_dataset</code>
     */
    public static final TwitterDataset TWITTER_DATASET = new TwitterDataset();

    /**
     * The table <code>twitter_dataset.alignments</code>.
     */
    public final Alignments ALIGNMENTS = eu.fbk.ict.fm.smt.db.old_alignments.tables.Alignments.ALIGNMENTS;

    /**
     * The table <code>twitter_dataset.pages</code>.
     */
    public final Pages PAGES = eu.fbk.ict.fm.smt.db.old_alignments.tables.Pages.PAGES;

    /**
     * The table <code>twitter_dataset.tweets</code>.
     */
    public final Tweets TWEETS = eu.fbk.ict.fm.smt.db.old_alignments.tables.Tweets.TWEETS;

    /**
     * The table <code>twitter_dataset.users</code>.
     */
    public final Users USERS = eu.fbk.ict.fm.smt.db.old_alignments.tables.Users.USERS;

    /**
     * No further instances allowed
     */
    private TwitterDataset() {
        super("twitter_dataset", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Alignments.ALIGNMENTS,
            Pages.PAGES,
            Tweets.TWEETS,
            Users.USERS);
    }
}
