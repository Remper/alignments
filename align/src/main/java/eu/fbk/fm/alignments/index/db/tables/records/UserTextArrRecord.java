/**
 * This class is generated by jOOQ
 */
package eu.fbk.fm.alignments.index.db.tables.records;


import eu.fbk.fm.alignments.index.db.tables.UserTextArr;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTextArrRecord extends UpdatableRecordImpl<UserTextArrRecord> implements Record2<Long, Float[]> {

    private static final long serialVersionUID = -159096481;

    /**
     * Setter for <code>public.user_text_arr.uid</code>.
     */
    public void setUid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_text_arr.uid</code>.
     */
    public Long getUid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_text_arr.lsa</code>.
     */
    public void setLsa(Float[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_text_arr.lsa</code>.
     */
    public Float[] getLsa() {
        return (Float[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Float[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Float[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserTextArr.USER_TEXT_ARR.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float[]> field2() {
        return UserTextArr.USER_TEXT_ARR.LSA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float[] value2() {
        return getLsa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTextArrRecord value1(Long value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTextArrRecord value2(Float[] value) {
        setLsa(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserTextArrRecord values(Long value1, Float[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTextArrRecord
     */
    public UserTextArrRecord() {
        super(UserTextArr.USER_TEXT_ARR);
    }

    /**
     * Create a detached, initialised UserTextArrRecord
     */
    public UserTextArrRecord(Long uid, Float[] lsa) {
        super(UserTextArr.USER_TEXT_ARR);

        set(0, uid);
        set(1, lsa);
    }
}
