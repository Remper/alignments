/**
 * This class is generated by jOOQ
 */
package eu.fbk.fm.alignments.index.db.tables;


import eu.fbk.fm.alignments.index.db.Keys;
import eu.fbk.fm.alignments.index.db.Public;
import eu.fbk.fm.alignments.index.db.tables.records.AlignmentsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Alignments extends TableImpl<AlignmentsRecord> {

    private static final long serialVersionUID = 759401234;

    /**
     * The reference instance of <code>public.alignments</code>
     */
    public static final Alignments ALIGNMENTS = new Alignments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AlignmentsRecord> getRecordType() {
        return AlignmentsRecord.class;
    }

    /**
     * The column <code>public.alignments.resource_id</code>.
     */
    public final TableField<AlignmentsRecord, String> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.alignments.uid</code>.
     */
    public final TableField<AlignmentsRecord, Long> UID = createField("uid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.alignments.score</code>.
     */
    public final TableField<AlignmentsRecord, Float> SCORE = createField("score", org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * The column <code>public.alignments.is_alignment</code>.
     */
    public final TableField<AlignmentsRecord, Boolean> IS_ALIGNMENT = createField("is_alignment", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.alignments.version</code>.
     */
    public final TableField<AlignmentsRecord, Short> VERSION = createField("version", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.alignments</code> table reference
     */
    public Alignments() {
        this("alignments", null);
    }

    /**
     * Create an aliased <code>public.alignments</code> table reference
     */
    public Alignments(String alias) {
        this(alias, ALIGNMENTS);
    }

    private Alignments(String alias, Table<AlignmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Alignments(String alias, Table<AlignmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AlignmentsRecord> getPrimaryKey() {
        return Keys.ALIGNMENTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AlignmentsRecord>> getKeys() {
        return Arrays.<UniqueKey<AlignmentsRecord>>asList(Keys.ALIGNMENTS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Alignments as(String alias) {
        return new Alignments(alias, this);
    }

    /**
     * Rename this table
     */
    public Alignments rename(String name) {
        return new Alignments(name, null);
    }
}
