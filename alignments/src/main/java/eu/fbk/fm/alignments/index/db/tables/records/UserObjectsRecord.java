/**
 * This class is generated by jOOQ
 */
package eu.fbk.fm.alignments.index.db.tables.records;


import eu.fbk.fm.alignments.index.db.tables.UserObjects;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserObjectsRecord extends UpdatableRecordImpl<UserObjectsRecord> implements Record2<Long, Object> {

    private static final long serialVersionUID = -482634169;

    /**
     * Setter for <code>public.user_objects.uid</code>.
     */
    public void setUid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_objects.uid</code>.
     */
    public Long getUid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_objects.object</code>.
     */
    public void setObject(Object value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_objects.object</code>.
     */
    public Object getObject() {
        return (Object) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Object> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Object> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserObjects.USER_OBJECTS.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field2() {
        return UserObjects.USER_OBJECTS.OBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value2() {
        return getObject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserObjectsRecord value1(Long value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserObjectsRecord value2(Object value) {
        setObject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserObjectsRecord values(Long value1, Object value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserObjectsRecord
     */
    public UserObjectsRecord() {
        super(UserObjects.USER_OBJECTS);
    }

    /**
     * Create a detached, initialised UserObjectsRecord
     */
    public UserObjectsRecord(Long uid, Object object) {
        super(UserObjects.USER_OBJECTS);

        set(0, uid);
        set(1, object);
    }
}
