/**
 * This class is generated by jOOQ
 */
package eu.fbk.fm.alignments.index.db.tables.records;


import eu.fbk.fm.alignments.index.db.tables.UserSg;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSgRecord extends UpdatableRecordImpl<UserSgRecord> implements Record3<Long, Long[], Float[]> {

    private static final long serialVersionUID = -1749527468;

    /**
     * Setter for <code>public.user_sg.uid</code>.
     */
    public void setUid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_sg.uid</code>.
     */
    public Long getUid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_sg.followees</code>.
     */
    public void setFollowees(Long[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_sg.followees</code>.
     */
    public Long[] getFollowees() {
        return (Long[]) get(1);
    }

    /**
     * Setter for <code>public.user_sg.weights</code>.
     */
    public void setWeights(Float[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_sg.weights</code>.
     */
    public Float[] getWeights() {
        return (Float[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long[], Float[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long[], Float[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return UserSg.USER_SG.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long[]> field2() {
        return UserSg.USER_SG.FOLLOWEES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float[]> field3() {
        return UserSg.USER_SG.WEIGHTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long[] value2() {
        return getFollowees();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float[] value3() {
        return getWeights();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSgRecord value1(Long value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSgRecord value2(Long[] value) {
        setFollowees(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSgRecord value3(Float[] value) {
        setWeights(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSgRecord values(Long value1, Long[] value2, Float[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSgRecord
     */
    public UserSgRecord() {
        super(UserSg.USER_SG);
    }

    /**
     * Create a detached, initialised UserSgRecord
     */
    public UserSgRecord(Long uid, Long[] followees, Float[] weights) {
        super(UserSg.USER_SG);

        set(0, uid);
        set(1, followees);
        set(2, weights);
    }
}
