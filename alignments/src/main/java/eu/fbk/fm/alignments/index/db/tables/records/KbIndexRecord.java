/**
 * This class is generated by jOOQ
 */
package eu.fbk.fm.alignments.index.db.tables.records;


import eu.fbk.fm.alignments.index.db.tables.KbIndex;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KbIndexRecord extends UpdatableRecordImpl<KbIndexRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -1621118902;

    /**
     * Setter for <code>public.kb_index.kbid</code>.
     */
    public void setKbid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.kb_index.kbid</code>.
     */
    public Long getKbid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.kb_index.uri</code>.
     */
    public void setUri(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.kb_index.uri</code>.
     */
    public String getUri() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return KbIndex.KB_INDEX.KBID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return KbIndex.KB_INDEX.URI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getKbid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUri();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KbIndexRecord value1(Long value) {
        setKbid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KbIndexRecord value2(String value) {
        setUri(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KbIndexRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KbIndexRecord
     */
    public KbIndexRecord() {
        super(KbIndex.KB_INDEX);
    }

    /**
     * Create a detached, initialised KbIndexRecord
     */
    public KbIndexRecord(Long kbid, String uri) {
        super(KbIndex.KB_INDEX);

        set(0, kbid);
        set(1, uri);
    }
}
